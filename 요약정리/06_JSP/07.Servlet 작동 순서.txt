<Servlet 작동순서 >

클라이언트에서 servlet요청이 들어오면 서버에서 servlet 컨테이너를 만들고, 
요청이 있을 때 마다 쓰레드가 생성된다.

웹 브라우저 > 웹 서버 > 웹어플리케이션서버 > Servlet 컨테이너 servlet객체생성, 쓰레드 생성 

<Servlet 라이프 사이클 >
언어를 사용할 때 라이프사이클은 호출할 시점의 정확한 시점을 알 필요가 있다.

Servlet의 사용도가 높은 이유는 빠른 응답 속도 때문이다.
Servlet은 최초 요청시 객체가 만들어져 메모리에 로딩되고, 이후 요청시에는
기존의 객체를 재활용하게 된다. 따라서 동작속도가 빠르다.

<Servlet의 라이프 사이클 순서>

1. 실행 시기 : Servlet 객체 생성 ( 최초 한번 ) ( 생성자 함수) 

2. 최초요청, 컨테이너 시작 : init() 호출 (최초 한번)

3. 모든 요청과 응답 : service(), doGet(), doPost() 호출 ( 요청시 매번, doGet이나 doPost 없으면 service실행)

4. 컨테이너 종료/어플리케이션 종료 : destroy() 호출 ( 마지막한번 자원해제 : Servlet수정, 서버 재가동 등)


Servlet의 라이프 사이클을 이용해 선처리와 후처리 작업이 가능하다.
선처리 : init()
후처리 : destroy()

init() 호출 전 선처리 : @PostConstruct 후 메소드
destroy() 호출 후 후처리 : @PreDestroy 후 메소드

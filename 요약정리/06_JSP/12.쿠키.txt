<쿠키> (중요함)

쿠키란? 웹브라우저에서 서버로 어떤 데이터를 요청 하면, 서버측에서는 알맞는 로직을 수행한 후 
데이터를 웹 브라우저에 html형태로 응답한다. 그리고 '서버는 웹 브라우저와의 관계를 종료한다. (무상태서버 or 무상태 로직)
이렇게 웹 브라우저에 응답 후 관계를 끊는 것은 http 프로토콜의 특징이라고 볼 수 있음.

예를 들어 한 사이트에서 로그인을 했다. 로그인할때는 브라우저와 서버가 통신을 한다.
하지만 로그인을 다 하고 난 뒤에는, 브라우저와 서버가 통신을 종료한다. 

사용자가 로그인이 된 상태에서 접속하고 실행할 수 있는 브라우저에 들어간다면 ? 
서버나 브라우저는 사용자가 로그인한것을 기억 할 수 없다. 

why ? 로그인 할때만 통신을 하고 종료 했으니 기억할 방법이 없는것
이러한 이유로 연결이 끊겼을 때 어떤 정보를 지속적으로 유지하기 위한 수단으로 <쿠키> 라는 방식을 사용한다.

쿠키는 서버에서 생성하여 서버가 아닌 클라이언트측에 특정 정보를 저장한다. (txt파일 형태로 저장)
그리고 서버에 요청 할 때 마다 쿠키의 속성값을 참조 또는 변경 할 수 있다.
쿠키는 1개당 4kb로 용량이 제한적이며, 300개까지 데이터 정보를 가질 수 있다.

=================================

<쿠키 문법>

쿠키는 서버에서 생성 => 클라이언트측에 전송되어 저장된다.

(1)
1. 쿠키 생성 : 쿠키 클래스 이용
2. 속성 설정 : setter 이용
3. response 객체에 쿠키 탑재 : response.addCookie() 이용

(2)쿠키 관련 함수
1. setMaxAge() : 	쿠키 유효기간을 설정
2. setpath() : 	쿠키사용의 유효 디렉토리를 설정
3. setValue() : 	쿠키의 값을 설정
4. setVersion() : 	쿠키 버전을 설정
5. getMaxAge() : 	쿠키 유효기간 정보를 얻는다.
6. getName() : 	쿠키 이름을 얻는다.
7. getPath() : 	쿠키사용의 유효 디렉토리 정보를 얻는다.
8. getValue() : 	쿠키의 값을 얻는다.
9. getVersion() : 	쿠키 버전을 얻는다.

=================================

<쿠키 생성> 

Cookie cookie = new Cookie ("쿠키이름", "쿠키 값");

쿠키를 생성하면 꼭 response 객체에 탑재 시켜야 한다.

response.addCookie ("쿠키이름");

=================================

<쿠키 리스트 출력하기>

Cookie[] cookies = request.getCookies(); 를 사용해서 

request 객체에 있는 쿠키들을 Cookie클래스 배열에 받아온다.

받아와서 for문을 이용해 출력할수 있다.

=================================

<쿠키 삭제하기>

1. 쿠키를 생성할때 유효한 시간을 정해줄 수 있다.

cookie.setMaxAge(시간); 을 넣으면 그 시간 만큼 유효한 쿠키를 생성한다.

cookie.setMaxAge(-1) 을 넣으면 로그아웃 할때까지 유효한 쿠키를 생성할 수 있다.

2. 쿠키 삭제하기

쿠키를 삭제하려면 유효기간이 0초짜리인 같은 이름의 쿠키를 만들어서 덮어 쓴다.

ex) cookie 라는 쿠키가 있다면

같은 이름으로 Cookie를 생성한뒤

cookie.setMaxAge(0); 으로 유효기간을 0초로 지정하고

response 객체에 덮어쓴다.

response.addCookie(cookie); 

=================================
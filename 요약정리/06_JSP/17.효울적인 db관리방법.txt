<효율적인 데이터 베이스 관리>

DAO :  Data Access Object
- 데이터 베이스에 접속해서 데이터 추가, 삭제, 수정 등의 작업을 하는 클래스이다.
- 일반적인 JSP 혹은 Servlet 페이지 내에 위의 로직을 함께 기술할 수도 있지만, 
   유지보수 및 코드의 모듈화를 위해 별도의 DAO 클래스를 만들어 사용한다.


DTO : Data Transfer Object
- DAO 클래스를 이용하여 데이터 베이스에서 데이터를 관리할 때 데이터를 일반적인 변수에 할당하여 작업 할 수도 있지만, 
  해당 데이터의 클래스 객체를 만들어 사용한다. 데이터만 하나로 모아 객체에 담는다.

==================================================

<커넥션 풀을 이용한 DAO>

커넥션 풀(DBCP) 이란?
웹 컨테이너가 실행되면서 DB와 미리 연결을 해놓는 객체들을 pool에 저장해두었다가
클라이언트 요청이 오면 connection을 빌려주고, 처리가 끝나면 
다시 connection을 반납받아 pool에 저장하는 방식을 말한다.

커넥션 풀을 사용하는 이유 
매번 사용자가 요청을 할 때 마다 드라이버를 로드하고 커넥션 객체를 생성하여 연결하고
종료하기 때문에 매우 비효율 적이다. 이런 문제를 해결하기 위해서 커넥션풀(DBCP)를 사용한다.

==================================================

<커넥션 풀 특징>

- 웹 컨테이너(WAS)가 실행되면서 connection 객체를 미리 pool에 생성하고

- HTTP 요청에 따라 pool에서 connection객체를 가져다 쓰고 반환한다.

- 이와 같은 방식으로 물리적인 데이터베이스 connection(연결) 부하를 줄이고 연결 관리 한다.

- pool에 미리 connection이 생성되어 있기 때문에 connection을 생성하는 데 드는 요정 마다
    연결 시간이 소비되지 않는다.

- 커넥션을 계속해서 재사용하기 때문에 생성되는 커넥션 수를 제한적으로 설정한다.

==================================================

/*  동시 접속자가 많을 경우 */

위에 커넥션 풀 설명에 따르면, 동시 접속 할 경우 pool에서 미리 생성 된 
connection을 제공하고 없을 경우는 
사용자는 connection이 반환될 때까지 번호순대로 대기상태 로 기다린다.

여기서 WAS에서 커넥션 풀을 크게 설정하면 메모리 소모가 큰 대신 많은 사용자가  
대기시간이 줄어들고, 반대로 커넥션 풀을 적게 설정하면 그 만큼 대기시간이 길어진다.

<커넥션 풀 기법 이용하기 >

tomcat 컨테이너가 데이터베이스 인증을 하도록 context.xml 파일에 아래의 코드를 추가한다.
Servers 프로젝트의 Tomcat 폴더안에 있는 context.xml 파일에
<Resource 
	auth="Container"
	driverClassName = "oracle.jdbc.driver.OracleDriver"
	url = "jdbc:oracle:thin:@localhost:1521:xe"
	username = "scott"
	password = "tiger"
	name = "jdbc/Oracle11g" 
	type = "javax.sql.DataSource"
	maxActive = "20"
	maxWait = "1000"
/>  을 추가한뒤

private Connection getConnection() throws SQLException {
	// 커넥션 풀의 DataSource안의 conn객체 이용 
	Connection conn = null;
	try {
		Context ctx = new InitialContext();
		DataSource ds = (DataSource) ctx.lookup("java:comp/env/jdbc/Oracle11g");
		conn = ds.getConnection();			
	} catch (NamingException e) {
		System.out.println("커넥션풀 이름 오류 : "+ e.getMessage());
	}	
	return conn;
} 을 DAO에 추가한뒤 
conn 객체는 getConnection() 으로 생성하면 커넥션 풀을 이용할 수 있다.

DataSource ds = (DataSource) ctx.lookup("java:comp/env/커넥션풀 이름");

ds는 DataSource 타입이고

ctx.lookup(); 은 객체이기 때문에
DataSource로 형변환 해주는건 필수 작업
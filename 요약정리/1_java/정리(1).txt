=====================================================
//println() : 콘솔창 출력(개행포함) (세로)

//print() : 콘솔창 출력(개행 미포함) (가로)

//printf() : 콘솔창 출력(포맷 지정)

%c 문자열, %s 문자형, %d 정수형, %x 16진수, %f 실수형
%d 정수형, %n 줄바꿈, 

"\t"는 탭. "\n"은 다음 줄 맨 앞으로
=====================================================
|| (or) 연산자 > 좌우항 중에 하나라도 ture 라면 전체가 true가 되는 논리 연산자.
 
gugudan < 2 || gugudan >9 

< 2 = 2보다 크고 , >9 보다 작으니까, || 연산자가 실행이 된다.
(둘중에 하나라도 맞으면 실행이 됨)

! (not,부정 연산자) Boolean 의 값을 역전시키는 역할.
true 앞에 !가 붙으면 false가 된다.
false 앞에 !가 붙으면 true가 된다.

=====================================================
반복문 (1) -    While 

While (조건) {
	반복실행 영역
}

반복문 (2) - for (조건을 잘못 걸면 무한 loop 가 생기니까 조심)

for (초기화; 반복조건; 반복실행) {
	반복실행 영역
}

확장 for문 - 제어 변수 대신 배열,콜렉션 클래스등의 모든 요소 값을 루프로 처리
for

반복문 안에는 다시 반복문이 나타날 수 있음.
=======================================================
배열 (1)

여러개의 변수를 모아 놓은 또 하나의 변수.
(여러 개의 데이터를 저장하기 위한 것이라고 할 수 있다)
int i = 10 ; // 변수선언 및 초기화
int[ ] iArr ={10,20,30,40,50};  // 배열선언 및 초기화
특정한 데이터를 가져오는 것 = 색인 [idx] - index
length : 배열 방의 갯수
배열과 반복문의 조화는 잘 어울림..
=======================================================
메소드

지금부터 배우게 될 메소드나 객체지향과 같은 개념들은 웅장하고, 
결함이 없고, 유지보수가 쉬운 
애플리케이션을 만들기 위한 기법들이라고 할 수 있다.

main 메소드는 규칙이다. ( 약속 )